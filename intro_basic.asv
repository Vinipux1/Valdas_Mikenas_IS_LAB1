%% 
%% intro basic
clear all
clc
close all
%% Variables
a = 1;

b = false;
fprintf('a type %s\n',class(a)); 
fprintf('b type %s\n',class(b));


A = [1, 2, 3] %Vector;
B = [1,2,3; 4,5,6] %comma sepparate rows, semicolon columns;
C=[1 2 3;4 5 6;7 8 9] %space sepparate rows, semicolon columns;
D=[1 ; 2 ; 3] %Vector;
E=[1 2 3]' % " ' " - trasnpose. From rows to collumns ;


%% Variables2


A = zeros(3)
B = ones(5)
C = rand(10,2);
D = eye(5)

%% Matrix

A=[1 2 3;4 5 6;7 8 9]

A(2, 2:3)
A(2, 1:end)
A(2, :)
A(2, 1:2:3)
A(2,[1 3])
A(:)

% http://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html

%% Matrix Operations

A = [1 2 3; 4 5 6; 7 8 9]
B = [3 5 2; 5 2 8; 3 6 9]
C = [3 5; 5 2; 3 6]


X = A + B % + addition
Y = A - B % - subtraction
Z = A * C % * matrix multiplication
C_T = C'% Transpose
%C*A


A .* B %.* element-wise multiplication
A ./ B %./ element-wise division
A .^ B %.^element-wise power

%% Martix linear equations

 A = [ 2 1  1;
     -1 1 -1;
      1 2  3];
B = [2; 3; -10];
A\B
X = linsolve(A,B)

%% Flow Control
%% conditional statement if
prompt = "Test Score: ";
score = input(prompt);
if (score >=90 && score  <=  100)
    disp("A")
elseif (score >=80 && score  <  90)
    disp("B")
elseif (score >=60 && score  <  80)
    disp("C")
elseif (score >=0 && score  <  60)
    disp("F")

else
    disp('Enter correct score')

end

%% while loop

n = 1;
while n < 10
    n = n + 1;
    disp(n);
end
disp('loop ends')

%% for loop

a = 2 
for ii=1:8
    disp([ii exp(ii)]);
end

%% nested for loop
clc
for i=0:9
    for j=1:i
        fprintf('%d X %d = %d \t',j, i, j*i);
    end
    fprintf('\n')
end

% https://se.mathworks.com/help/matlab/control-flow.html
%% Functions
%Function definitions in a script must appear at the end of the file.

values = [12.7, 45.4, 98.9, 26.6, 53.1];
[ave,stdev] = stat(values)


%% Anonymous Functions

cube = @(x) x.^3;
a = cube(5)


%% Plotting
x = -pi:.1:pi;
y = sin(x);
plot(x,y, x, 2*y,'--')
legend('sin(x)' , '2 * sin(x)')
grid('on')



function [m,s] = stat(x)
    n = length(x);
    m = sum(x)/n;
    s = sqrt(sum((x-m).^2/n));
end